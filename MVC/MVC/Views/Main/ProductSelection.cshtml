@page
@model MVC.Views.ProductSelectionModel
@using MVC.Models
@{
    int count = Convert.ToInt32(TempData["Count"]);
    List<Product>? products = TempData["ProductNames"] as List<Product>;
    if (products is null)
    {
        throw new Exception();
    }
    else
    {
        var serializedProducts = Newtonsoft.Json.JsonConvert.SerializeObject(products);
        <script>
            var productsList = @Html.Raw(serializedProducts);
        </script>
    }
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        body {
            font-family: Arial, sans-serif;
        }

        form {
            width: 80%;
            margin: 50px auto;
            padding: 20px;
        }

        input[type="text"],
        input[type="number"],
        input[type="tel"] {
            width: 100%;
            padding: 8px;
            margin-bottom: 20px;
        }

        button {
            background-color: blue;
            color: white;
        }

        select {
            width: 100%;
            padding: 8px;
            margin-bottom: 20px;
        }

    </style>
</head>
<body>
    <h1>Choose a type of pizza from the list below and specify their quantity.</h1>
    <form action="Result" method="post">

        @for (int i = 0; i < count; i++)
        {
            <select name="productAmounts[@i].Product.Name" id="productNameSelect_@i" onchange="displayPrice(@i)">
                <option value="">Select name of pizza</option>
                @foreach (var product in products)
                {
                    <option value="@product.Name">@product.Name</option>
                }
            </select>
            <br>
            
            <input type="number" name="productAmounts[@i].Amount" placeholder="Enter amount">
            <p id="productPrice_@i">Price not determined</p>
            <br>
        }
        <button type="submit">Submit</button>

    </form>
    <script>
        function displayPrice(index) {
            var select = document.getElementById("productNameSelect_" + index);
            var priceParagraph = document.getElementById("productPrice_" + index);
            var hiddenInput = document.getElementById("productPriceHidden_" + index);
            var selectedOption = select.options[select.selectedIndex];
            var productName = selectedOption.value;

            var product = productsList.find(function (prod) {
                return prod.Name === productName;
            });

            if (product) {
                priceParagraph.textContent = "Price: " + product.Price;
                hiddenInput.value = product.Price;
            } else {
                priceParagraph.textContent = "unknown price";
                hiddenInput.value = 0;
            }
        }
    </script>
</body>
</html>